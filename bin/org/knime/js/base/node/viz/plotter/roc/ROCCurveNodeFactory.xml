<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="./roc_curve.png" type="Visualizer" xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.8 http://knime.org/node/v2.8.xsd">
	<name>ROC Curve (JavaScript)</name>
	
	<shortDescription>
	    A ROC curve plot using a JavaScript based charting library.
	</shortDescription>
		
	<fullDescription>
		<intro>	
		    <p>	
		    This node draws ROC curves for two-class classification problems. The input table
            must contain a column with the real class values (including all class values as possible values)
            and a second column with the probabilities that an item (=row) will be classified as being
            from the selected class. Therefore only learners/predictors that output class probabilities can
            be used.
            </p>
            <p>
            In order to create a ROC curve for a model, the input table is first sorted by the class probabilities
            for the positive class i.e. rows for which the model is certain that it belongs to the positive class
            are sorted to front. Then the sorted rows are checked if the real class value is the actually the positive
            class. If so, the ROC curve goes up one step, if not it goes one step to the right. Ideally, all positive
            rows are sorted to front, so you have a line going up to 100% first and then going straight to right. As a
            rule of thumb, the greater the area under the curve, the better is the model.
            </p>
            <p>
            You may compare the ROC curves of several trained models by first joining the class probability columns
            from the different predictors into one table and then selecting several column in the column filter
            panel.
            </p>
            <p>
            The black diagonal line in the diagram is the random line which is the worst possible performance a
            model can achieve.
            </p>
    	    <p>Additionally a static SVG image can be rendered, which is then made available at the first output port.</p>
            <p>Note, this node is currently under development. Future versions of the node might have more or changed functionality.</p>
            <p>
	        The node supports custom CSS styling. 
	        You can simply put CSS rules into a single string and set it as a flow variable 'customCSS' 
	        in the node configuration dialog. 
	        You will find the list of available classes and their description on our <a href="https://knime.com/css-styling">documentation page</a>.
	        </p>
		</intro>
		
		<tab name="ROC Curve Settings">
            <option name="Class column">
                Select the column that contains the two classes that the model was trained on.
            </option>
            <option name="Positive class value">Select the value from the class column that stands for the "positive" class, i.e.
            the value high probabilities in the probability column (see below) are assigned to.</option>
            <option name="Limit data points for each curve to">By default each curve shows at most 2,000 different data points
            regardless how may rows are in the input. If you want to see more or less points in the curve, adjust this value.
            Lower values make rendering the curves faster but this is only an issue if you have many different curves. A value
            of -1 disables the limit and shows all input data points.</option>
            <option name="Columns containing the positive class probabilities">Select the
            column(s) that contain the probabilities for the a row being from the positive class.        
            </option>
            <option name="Ignore missing values">If checked, the missing values in Class or Positive Class Probabilities columns will be ignored without a corresponding warning message. 
            Otherwise, missing values in the Class Column will be treated as incorrect predictions; missing values in the Positive Class Probabilities columns will be sorted to the end (low probability) of the curves. A corresponding warning message will be raised.</option>
        </tab>
		<tab name="General Plot Options">
		    
            <option name="Create image at outport">If an image is supposed to be rendered during execute for the upper outport. Disable this option if image is not needed or creation is too time consuming.</option>
            
            <option name="Chart title">The width of the generated SVG image.</option>
            <option name="Chart subtitle">The width of the generated SVG image.</option>
            
            <option name="Width of image (in px)">The width of the generated SVG image.</option>
            <option name="Height of image (in px)">The height of the generated SVG image.</option>
            <option name="Line width (in px)">The width of the shown lines.</option>
            <option name="Show area under curve">If set, the plot displays the size of the area under the curves</option>
            <option name="Resize view to fill window">Setting this option resizes the view to the available area of the window. If disabled the view size is static according to the set width and height.</option>
            <option name="Display full screen button">Displays a button enabling full screen mode.</option>
            
            <option name="Background color">The color of the background of the image.</option>
            <option name="Data area color">The background color of the data area, within the axes.</option>
            <option name="Show grid">If an additional grid is being rendered at the axes tick positions.</option>
            <option name="Grid color">The color of the grid.</option>
            <option name="Show warnings in view">If checked, warning messages will be displayed in the view when they occur.</option>
        </tab>
        
        <tab name="Axis Configuration">
            <option name="Label for x axis">The text shown under the x axis</option>
            <option name="Label for y axis">The text shown next to the y axis</option>
            <option name="Show color legend">Whether to show a legend explaining the meaning of the lines in the plot.</option>
        </tab>
        
        <tab name="View Controls">
            <option name="Enable view edit controls">If checked, the user can modify view parameters directly.</option>
            <option name="Enable title edit controls">If checked, the user can edit the view title in the view.</option>
            <option name="Enable subtitle edit controls">If checked, the user can edit the view subtitle in the view.</option>
            <option name="Enable label edit for x axis">If checked, the user can edit the label of the x axis in the view.</option>
            <option name="Enable label edit for y axis">If checked, the user can edit the label of the y axis in the view.</option>
        </tab>
	</fullDescription>
	
	<interactiveView name="ROC Curve">
		Displays a ROC curve visualization of the input data.
	</interactiveView>
	<ports>
		<inPort index="0" name="Display data">Data table with data to display.</inPort>
		<inPort index="1" name="Color info">A table with one column that contains column names as rows. The color of each row is used in the plot. If this port is not connected, default colors are used.</inPort>
		<outPort index="0" name="Image">SVG image rendered by the JavaScript implementation of the ROC curve.</outPort>
		<outPort index="1" name="Area under curve">The areas under the ROC curves.</outPort>
	</ports>	
</knimeNode>