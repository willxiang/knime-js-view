<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="./oge_wave.png" type="Visualizer" xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.8 http://knime.org/node/v2.8.xsd">
	<name>Oge Wave (JavaScript)</name>
	
	<shortDescription>
	    A oge wave using a JavaScript based charting library.
	</shortDescription>
		
	<fullDescription>
		<intro>		
    	    <p>A oge wave using a JavaScript based charting library. The view can be accessed either via
            the <i>Interactive View</i> action on the executed node or in the KNIME Web Portal. 
	       	</p>
            <p>The configuration of the node lets you choose the size of a sample to display and to enable certain 
            controls, which are then available in the view. This includes the ability to choose different columns
            for x and y or the possibility to set a title. Enabling or disabling these controls via the configuration
            dialog might not seem useful at first glance but has benefits when used in a web portal/wizard execution 
            where the end user has no access to the workflow itself.
            </p>
            <p>The second input port provides the possibility to specify colors for the different lines/columns in the plot. Therefore append a Extract Column Header and Transpose node to the data table which should be plotted in this node. Afterwards use the Color Manager to append the colors based on the individual column names. The node automatically selects the column from the Color Manager and assigns the color values to the plotted columns.</p>
            <p>Additionally a static SVG image can be rendered, which is then made available at the first output port.</p>
            <p>Note, this node is currently under development. Future versions of the node might have more or changed functionality.</p>
		</intro>
		<tab name="Oge Wave Options">
            <option name="Create image at outport">If an image is supposed to be rendered during execute for the upper outport. Disable this option if image is not needed or creation is too time consuming.</option>
            <option name="Maximum number of rows">Use this numerical value to restrict the number of rows used for this visualization.</option>
            <!-- <option name="Selection column name">Name of the appended column containing boolean values to indicate, whether a point was selected in the view or not.</option> -->
            <option name="Choose column for x-axis">Defines the column that contains the values for X coordinates.</option>
            <option name="Choose columns for y-axis">Defines the columns that contains the values for Y coordinates. Every included column is represented by one line in the view.</option>
            <option name="Report on missing values">Check to get the warning messages about missing values and being able to choose missing values handling strategy.
                    If not checked, missing values will be ignored without raising a warning. For y-axis Connect handling method will be used.</option>
            <option name="Missing value handling (y-axis)">Defines how to handle missing values on the y-axis. Three methods are available:
	            <ul>
	                <li><i>Connect</i> - The plot will be displayed with continuous lines where missing values are ignored.</li>
	                <li><i>Gap</i> - Columns with missing values might produce gaps in the plotted line.</li>
	                <li><i>Skip column</i> - The whole column will not be plotted if it contains missing values.</li>
	            </ul>
            </option>
        </tab>
        <tab name="Axis Configuration">
            <option name="Label for x-axis" optional="true">The label for the x-axis. If left blank, the selected column name is displayed.</option>
            <option name="Label for y-axis" optional="true">The label for the y-axis. If left blank, the selected column name is displayed.</option>            
            <option name="Date and Time types">
                Date and Time values are converted into string using the selected or entered conversion pattern as defined by <a href="http://momentjs.com/docs/#/displaying/format/">moment.js</a>. Examples:
                <ul>
                    <li>"dddd, MMMM Do YYYY, h:mm:ss a" formats dates like "Sunday, February 14th 2010, 3:25:50 pm"</li>
                    <li>"ddd, hA" formats dates like "Sun, 3PM"</li>
                    <li>"YYYY-MM-DDTHH:mm:ssZ" formats dates as defined by <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a>.</li>
                </ul>
                Some valid pattern elements are:
                <ul>
                    <li>Y: year</li>
                    <li>Q: quarter</li>
                    <li>M: month of year</li>
                    <li>W: week of year</li>
                    <li>DDD: day of year</li>
                    <li>D: day of month</li>
                    <li>d: day of week</li>
                    <li>dd: day of week (Su Mo ... Fr Sa)</li>
                    <li>a: am/pm marker</li>
                    <li>H: hour in day (0-23)</li>
                    <li>k: hour in day (1-24)</li>
                    <li>h: hour in am/pm (1-12)</li>
                    <li>m: minute in hour</li>
                    <li>s: second in minute</li>
                    <li>S: millisecond</li>
                    <li>z: Time zone (EST CST ... MST PST)</li>
                    <li>Z: Time zone (offset)</li>
                    <li>X: unix timestamp</li>
                </ul>
                Localized formats:
                <ul>
                    <li>LT: Time (e.g. 8:30 PM)</li>
                    <li>LTS: Time with seconds (e.g. 8:30:25 PM)</li>
                    <li>L: Month numeral (0 padded), day of month (0 padded), year (e.g. 09/04/1986)</li>
                    <li>l: Month numeral, day of month, year (e.g. 9/4/1986)</li>
                    <li>LL: Month name, day of month, year (e.g. September 4 1986)</li>
                    <li>ll: Month name (short), day of month, year (e.g. Sep 4 1986)</li>
                    <li>LLL: Month name, day of month, year, time (e.g. September 4 1986 8:30 PM)</li>
                    <li>lll: Month name (short), day of month, year, time (e.g. Sep 4 1986 8:30 PM)</li>
                    <li>LLLL: Month name, day of month, day of week, year, time (e.g. Thursday, September 4 1986 8:30 PM)</li>
                    <li>llll: Month name (short), day of month, day of week (short), year, time (e.g. Thu, Sep 4 1986 8:30 PM)</li>
                </ul>
                For printing an arbitrary string, wrap the string in square brackets, e.g. '[today] dddd'.
            </option>
            <option name="Locale">
                The locale which is used to render all date/time cells.
            </option>
            <option name="Local Date format">
                A global format, which is applied to all locale date cells. To format the string the framework Moment.js is used.
            </option>
            <option name="Local Date and Time format">
                A global format, which is applied to all local date/time cells. To format the string the framework Moment.js is used.
            </option>
            <option name="Local Time format">
                A global format, which is applied to all local time cells. To format the string the framework Moment.js is used.
            </option>
            <option name="Zoned Date and Time format">
                A global format, which is applied to all zoned date/time cells. To format the string the framework Moment.js is used.
            </option>
            <option name="Time zone (for zoned format)">
                Time zone to use when rendering Zoned Date and Time format.
                Zoned Date and Time format must contain a zone mask symbol ('z' or 'Z') to enable the time zone selector.
            </option>            
            <option name="Date and Time (legacy) format">
                A global format, which is applied to all date/time (legacy) cells. To format the string the framework Moment.js is used.
            </option>
            <option name="Show color legend">Switches the legend on/off. The legend shows the mapping between colors used in the view and the respective column names.</option>
            <option name="Auto range axes">Select if axes ranges are supposed to be automatically calculated. This also applies if the columns are changed in the view.</option>
            <option name="Use domain information">Using this option, the axis ranges are determined by bounds from the domain on initial layout.</option>
        </tab>
        <tab name="General Plot Options">
            <option name="Chart title" optional="true">The title of the graph shown above the generated image. If left blank, no title will be shown.</option>
            <option name="Chart subtitle" optional="true">The subtitle of the graph shown above the generated image. If left blank, no subtitle will be shown.</option>
            <option name="Width of image (in px)">The width of the generated SVG image.</option>
            <option name="Height of image (in px)">The height of the generated SVG image.</option>
            <option name="Resize view to fill window">Setting this option resizes the view to the available area of the window. If disabled the view size is static according to the set width and height.</option>
            <option name="Display full screen button">Displays a button enabling full screen mode.</option>
            <option name="Background color">The color of the background of the image.</option>
            <option name="Data area color">The background color of the data area, within the axes.</option>
            <option name="Show grid">If an additional grid is being rendered at the axes tick positions.</option>
            <option name="Grid color">The color of the grid.</option>
            <option name="Show warnings in view">If checked, warning messages will be displayed in the view when they occur.</option>
        </tab>
        <tab name="View Controls">
            <option name="Enable view edit controls">If checked all edit controls selected below will be rendered in the view. Unchecking this option disables all edit controls.</option>
            <option name="Enable title edit controls">Renders a text box to change the chart title in the view.</option>
            <option name="Enable subtitle edit controls">Renders a text box to change the chart subtitle in the view.</option>
            <option name="Enable column chooser for x-axis">Renders a selection box to change column used for X coordinates in the view.</option>
            <option name="Enable column chooser for y-axis">Renders a selection box to change column used for X coordinates in the view.</option>
            <option name="Enable label edit for x-axis">Renders a text box to change x-axis label in the view.</option>
            <option name="Enable label edit for y-axis">Renders a text box to change y-axis label in the view.</option>
            <option name="Enable mouse crosshair">Enables the display of additional crosshairs with labels of the current mouse position.</option>
            <option name="Snap to data points">If enabled the crosshairs will snap to the closest data point according to mouse position.</option>
            <!-- <option name="Enable selection">Enables or disables the selection feature. When enabled data points can be selected in the scatter plot and the selection is propagated in an appended column of the data table.</option>
            <option name="Enable rectangular selection">Enables a selection mode where a rectangle can be drawn to select points. To start drawing a selection rectangle hold down the Alt-Key and drag the mouse.</option>
            <option name="Enable lasso selection">Enables a selection mode where a freeform shape can be drawn to select points. To start drawing a selection lasso hold down the Ctrl and Alt-Key and drag the mouse.</option>-->
            <option name="Enable panning">Enable panning on the plot. To start panning click and drag the mouse. Note if panning and drag zooming is enabled, 
                panning can be achieved by holding the Ctrl key and dragging the mouse.</option>
            <option name="Enable mouse wheel zooming">Enable zooming on the plot using the mouse wheel.</option>
            <option name="Enable drag zooming">Enable zooming on the plot by dragging the mouse and drawing a zoom rectangle. Dragging from the top-left down 
                will create a zoom rectangle, dragging from the bottom right up will reset the zoom to fit the extends of the plot. Note if panning and 
                drag zooming is enabled, panning can be achieved by holding the Ctrl key and dragging the mouse.
            </option>
            <option name="Show zoom reset button">Renders a button to resize the plot to it's extends.</option>
        </tab>
	</fullDescription>
	
	<interactiveView name="Oge Wave">
		Displays a oge wave visualization of the input data.
	</interactiveView>
	<ports>
		<inPort index="0" name="Display data">Data table with data to display.</inPort>
		<inPort index="1" name="Line color data" optional="true">Data table containing one column with the column names of table which has in addition a color assigned.</inPort>
		<outPort index="0" name="Image">SVG image rendered by the JavaScript implementation of the oge wave.</outPort>
		<outPort index="1" name="Input data">Data table containing the input data.</outPort>
	</ports>	
</knimeNode>